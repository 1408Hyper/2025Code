name: C/C++ CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    # Define env variables to be used
    env:
      # Change this to the version you want to install
      gccver: "13.3.rel1"
      archiveext: ".tar.xz"
      execprefix: "arm-none-eabi"
      deps: wget
      installprefix: "/usr/share"
      
    steps:
    - uses: actions/checkout@v4
    - name: prepare paths
      run: |
        wgetlink="wgetlink=https://developer.arm.com/-/media/Files/downloads/gnu/${gccver}/binrel/arm-gnu-toolchain-${gccver}-x86_64-${execprefix}${archiveext}"
        echo $wgetlink >> $GITHUB_ENV

        _installdir="${installprefix}/arm-gnu-toolchain-${gccver}-x86_64-${execprefix}"
        installdir="installdir=${_installdir}"
        echo $installdir >> $GITHUB_ENV
        
        _extractto="${_installdir}${archiveext}"
        extractto="extractto=${_extractto}"
        echo $extractto >> $GITHUB_ENV

        _shareprefix="${_installdir}/bin/${execprefix}"
        shareprefix="shareprefix=${_shareprefix}"
        echo $shareprefix >> $GITHUB_ENV

        _binprefix="/usr/bin/${execprefix}"
        binprefix="binprefix=${_binprefix}"
        echo $binprefix >> $GITHUB_ENV
    - name: print variables
      run: |
        echo "Installing ARM GCC version: ${gccver}"
        echo "from: ${wgetlink}"

        echo "Downloading archive to: ${extractto}"
        echo "Extracting to: ${installdir}"
        echo "Creating symlinks for install in: ${binprefix}"

    - name: install/extract arm-gcc & deps
      run: |
        sudo apt update
        sudo apt install -y "${deps}"

        sudo wget -P "${installprefix}" "${wgetlink}"
        sudo tar -xJf "${extractto}" -C "${installprefix}"
        
        # This may no longer be required to download
        #sudo apt install libncurses5
    - name: setup symlinks
      run: |
        sudo ln -s "${shareprefix}-g++" "${binprefix}-g++"
        sudo ln -s "${shareprefix}-gcc" "${binprefix}-gcc"
        sudo ln -s "${shareprefix}-objcopy" "${binprefix}-objcopy"
        sudo ln -s "${shareprefix}-objsize" "${binprefix}-objsize"
    - name: run gcc tests
      run: |
        arm-none-eabi-g++ --version
        arm-none-eabi-gcc --version
    - name: make
      run: |
        make
    # We don't need any tests for now